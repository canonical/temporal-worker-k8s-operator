# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
envlist = fmt, lint, unit, static, coverage-report
skipsdist = True
skip_missing_interpreters = True
max-line-length=120

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3
allowlist_externals = make, rockcraft
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Format the code
deps =
    black==22.8.0
    isort==5.10.1
commands =
    isort {[vars]src_path} {[vars]tst_path}
    black {[vars]src_path} {[vars]tst_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    mypy
    pylint
    pydocstyle
    pytest
    black==22.8.0
    codespell==2.2.1
    flake8==5.0.4
    flake8-builtins==1.5.3
    flake8-copyright==0.2.3
    flake8-docstrings==1.6.0
    isort==5.10.1
    pep8-naming==0.13.2
    pyproject-flake8==5.0.4.post1
    flake8-docstrings-complete>=1.0.3
    flake8-test-docs>=1.0
commands =
    pydocstyle {[vars]all_path}
    codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg \
      --skip {toxinidir}/src/resources/worker.py \
      --skip {toxinidir}/resource_sample_py/resource_sample/worker.py
    pflake8 {[vars]all_path} 
    isort --check-only --diff {[vars]all_path} 
    black --check --diff {[vars]all_path} 
    mypy {[vars]all_path} --ignore-missing-imports --install-types --non-interactive --explicit-package-bases
    pylint {[vars]all_path} --disable=E0401,W1203,W0613,W0718,R0903,W1514,C0301,C0103,C0104,R0914,R0915,R0801,W0212,W0719,W0511,R0913,R0912,R0902,R0917,R0911

[testenv:unit]
description = Run unit tests
deps =
    coverage[toml]==6.4.4
    ipdb==0.13.9
    pytest==7.1.3
    hvac==2.3.0
    cosl==0.0.6
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report

[testenv:coverage-report]
description = Create test coverage report
deps =
    coverage[toml]
    pytest
    -r{toxinidir}/requirements.txt
commands =
    coverage report

[testenv:static]
description = Run static analysis tests
deps =
    bandit[toml]
    -r{toxinidir}/requirements.txt
commands =
    bandit -c {toxinidir}/pyproject.toml -r {[vars]src_path} {[vars]tst_path}

[testenv:integration-charm]
description = Run integration tests
deps =
    ipdb==0.13.9
    juju==3.5.2.0
    pytest==7.1.3
    pytest-operator==0.31.1
    temporal-lib-py==1.4.3
    pytest-asyncio==0.21
    poetry==1.8.3
    -r{toxinidir}/requirements.txt
commands =
    # For local testing
    make -C resource_sample_py/ build_rock
    pytest {[vars]tst_path}integration/test_charm.py -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:integration]
description = Run integration tests
deps =
    ipdb==0.13.9
    juju==3.5.2.1
    pytest==7.1.3
    pytest-operator==0.31.1
    temporal-lib-py==1.4.3
    pytest-asyncio==0.21
    poetry==1.8.3
    hvac==2.3.0
    -r{toxinidir}/requirements.txt
commands =
    pytest --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}
